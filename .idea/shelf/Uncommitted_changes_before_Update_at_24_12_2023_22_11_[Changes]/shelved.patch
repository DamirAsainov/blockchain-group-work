Index: src/Main.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import java.util.ArrayList;\r\nimport java.util.Date;\r\nimport java.util.Scanner;\r\n\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        ArrayList<Block> blockchain = new ArrayList<>();\r\n\r\n        Scanner sc = new Scanner(System.in);\r\n\r\n        Date date = new Date();\r\n\r\n        while (true) {\r\n            System.out.println(\"Do you want to create a new block? (y / n): \");\r\n            String choice = sc.next();\r\n\r\n            if (choice.equals(\"y\")) {\r\n                sc.nextLine();\r\n                System.out.println(\"Write a data about a transaction: \");\r\n                String data = sc.nextLine();\r\n                String[] transactions = {data, String.valueOf(date.getDate())};\r\n\r\n                if (blockchain.isEmpty()) {\r\n                    blockchain.add(new Block(0, transactions));\r\n                } else {\r\n                    blockchain.add(new Block(blockchain.get(blockchain.size() - 1).getBlockHash(), transactions));\r\n                }\r\n                System.out.println(\"The block was successfully added!\");\r\n                System.out.println();\r\n            } else if (choice.equals(\"n\")) {\r\n                break;\r\n            } else {\r\n                System.out.println(\"Choose a valid option.\");\r\n            }\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Main.java b/src/Main.java
--- a/src/Main.java	(revision f3d56b8837887165b073866ad4aa18e9382afbb3)
+++ b/src/Main.java	(date 1703434282212)
@@ -1,15 +1,21 @@
 import java.util.ArrayList;
 import java.util.Date;
 import java.util.Scanner;
+import java.security.KeyPair;
+import java.security.KeyPairGenerator;
+import java.security.PrivateKey;
+import java.security.PublicKey;
+import java.util.Base64;
 
 public class Main {
     public static void main(String[] args) {
         ArrayList<Block> blockchain = new ArrayList<>();
-
         Scanner sc = new Scanner(System.in);
-
         Date date = new Date();
 
+        // Generate RSA key pair
+        KeyPair keyPair = generateKeyPair();
+
         while (true) {
             System.out.println("Do you want to create a new block? (y / n): ");
             String choice = sc.next();
@@ -18,13 +24,22 @@
                 sc.nextLine();
                 System.out.println("Write a data about a transaction: ");
                 String data = sc.nextLine();
-                String[] transactions = {data, String.valueOf(date.getDate())};
+
+                // Encrypt the transaction data using the public key
+                String encryptedData = encrypt(data, keyPair.getPublic());
 
-                if (blockchain.isEmpty()) {
-                    blockchain.add(new Block(0, transactions));
-                } else {
-                    blockchain.add(new Block(blockchain.get(blockchain.size() - 1).getBlockHash(), transactions));
+
+                // Create a new block with the encrypted transaction data
+                Block newBlock = new Block(encryptedData);
+
+                // Set the previous hash if there are previous blocks
+                if (!blockchain.isEmpty()) {
+                    newBlock.setPreviousHash(blockchain.get(blockchain.size() - 1).getBlockHash());
                 }
+
+                // Add the new block to the blockchain
+                blockchain.add(newBlock);
+
                 System.out.println("The block was successfully added!");
                 System.out.println();
             } else if (choice.equals("n")) {
@@ -33,5 +48,41 @@
                 System.out.println("Choose a valid option.");
             }
         }
+
+        // Display the blockchain
+        System.out.println("Blockchain:");
+        for (Block block : blockchain) {
+            System.out.println("Block Hash: " + block.getBlockHash());
+            System.out.println("Encrypted Transaction: " + block.getTransaction());
+            System.out.println();
+        }
+    }
+
+    private static KeyPair generateKeyPair() {
+        try {
+            KeyPairGenerator keyPairGenerator = KeyPairGenerator.getInstance("RSA");
+            keyPairGenerator.initialize(2048);
+            return keyPairGenerator.generateKeyPair();
+        } catch (Exception e) {
+            e.printStackTrace();
+            return null;
+        }
+    }
+
+    private static String encrypt(String plainText, PublicKey publicKey) {
+        try {
+            byte[] cipherText = plainText.getBytes();
+            byte[] encryptedBytes = rsaEncrypt(cipherText, publicKey);
+            return Base64.getEncoder().encodeToString(encryptedBytes);
+        } catch (Exception e) {
+            e.printStackTrace();
+            return null;
+        }
+    }
+
+    private static byte[] rsaEncrypt(byte[] input, PublicKey key) throws Exception {
+        javax.crypto.Cipher cipher = javax.crypto.Cipher.getInstance("RSA");
+        cipher.init(javax.crypto.Cipher.ENCRYPT_MODE, key);
+        return cipher.doFinal(input);
     }
 }
\ No newline at end of file
Index: src/Block.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import java.util.Arrays;\r\n\r\npublic class Block {\r\n    private int previousHash;\r\n    private String[] transactions;\r\n\r\n    private int blockHash;\r\n\r\n    public Block(int previousHash, String[] transaction) {\r\n        this.previousHash = previousHash;\r\n        this.transactions = transactions;\r\n\r\n        Object[] contents = {\r\n                Arrays.hashCode(transactions), previousHash\r\n        };\r\n        this.blockHash = Arrays.hashCode(contents);\r\n    }\r\n\r\n    public int getPreviousHash() {\r\n        return previousHash;\r\n    }\r\n    public String[] getTransaction(){\r\n        return transactions;\r\n    }\r\n\r\n    public int getBlockHash() {\r\n        return blockHash;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Block.java b/src/Block.java
--- a/src/Block.java	(revision f3d56b8837887165b073866ad4aa18e9382afbb3)
+++ b/src/Block.java	(date 1703431584793)
@@ -5,8 +5,9 @@
     private String[] transactions;
 
     private int blockHash;
+    public Block
 
-    public Block(int previousHash, String[] transaction) {
+    public Block(int previousHash, String[] transactions) {
         this.previousHash = previousHash;
         this.transactions = transactions;
 
@@ -26,4 +27,8 @@
     public int getBlockHash() {
         return blockHash;
     }
+
+    public void setPreviousHash(int previousHash) {
+        this.previousHash = previousHash;
+    }
 }
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"ffab8430-2b2c-437f-90e9-99dc1ffbd2cb\" name=\"Changes\" comment=\"\">\r\n      <change afterPath=\"$PROJECT_DIR$/.gitignore\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/misc.xml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/modules.xml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/vcs.xml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/Blockchain.iml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/Block.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/Main.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2ZzIugN9eCtjd494bjGXGXk6Nzt\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"RunOnceActivity.OpenProjectViewOnStart\": \"true\",\r\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\r\n    \"WebServerToolWindowFactoryState\": \"false\",\r\n    \"node.js.detected.package.eslint\": \"true\",\r\n    \"node.js.detected.package.tslint\": \"true\",\r\n    \"node.js.selected.package.eslint\": \"(autodetect)\",\r\n    \"node.js.selected.package.tslint\": \"(autodetect)\",\r\n    \"vue.rearranger.settings.migration\": \"true\"\r\n  }\r\n}]]></component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"ffab8430-2b2c-437f-90e9-99dc1ffbd2cb\" name=\"Changes\" comment=\"\" />\r\n      <created>1703418706814</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1703418706814</updated>\r\n      <workItem from=\"1703418708347\" duration=\"2301000\" />\r\n    </task>\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision f3d56b8837887165b073866ad4aa18e9382afbb3)
+++ b/.idea/workspace.xml	(date 1703434282256)
@@ -4,15 +4,10 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="ffab8430-2b2c-437f-90e9-99dc1ffbd2cb" name="Changes" comment="">
-      <change afterPath="$PROJECT_DIR$/.gitignore" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/modules.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/vcs.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/Blockchain.iml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/Block.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/Main.java" afterDir="false" />
+    <list default="true" id="ffab8430-2b2c-437f-90e9-99dc1ffbd2cb" name="Changes" comment="blockchain 0.1">
+      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/Block.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Block.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/Main.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Main.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -38,18 +33,18 @@
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
   </component>
-  <component name="PropertiesComponent"><![CDATA[{
-  "keyToString": {
-    "RunOnceActivity.OpenProjectViewOnStart": "true",
-    "RunOnceActivity.ShowReadmeOnStart": "true",
-    "WebServerToolWindowFactoryState": "false",
-    "node.js.detected.package.eslint": "true",
-    "node.js.detected.package.tslint": "true",
-    "node.js.selected.package.eslint": "(autodetect)",
-    "node.js.selected.package.tslint": "(autodetect)",
-    "vue.rearranger.settings.migration": "true"
+  <component name="PropertiesComponent">{
+  &quot;keyToString&quot;: {
+    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
+    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
+    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
+    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
+    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
+    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
+    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
+    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
   }
-}]]></component>
+}</component>
   <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
   <component name="TaskManager">
     <task active="true" id="Default" summary="Default task">
@@ -58,11 +53,23 @@
       <option name="number" value="Default" />
       <option name="presentableId" value="Default" />
       <updated>1703418706814</updated>
-      <workItem from="1703418708347" duration="2301000" />
+      <workItem from="1703418708347" duration="7411000" />
+    </task>
+    <task id="LOCAL-00001" summary="blockchain 0.1">
+      <created>1703421372728</created>
+      <option name="number" value="00001" />
+      <option name="presentableId" value="LOCAL-00001" />
+      <option name="project" value="LOCAL" />
+      <updated>1703421372728</updated>
     </task>
+    <option name="localTasksCounter" value="2" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
     <option name="version" value="3" />
   </component>
+  <component name="VcsManagerConfiguration">
+    <MESSAGE value="blockchain 0.1" />
+    <option name="LAST_COMMIT_MESSAGE" value="blockchain 0.1" />
+  </component>
 </project>
\ No newline at end of file
